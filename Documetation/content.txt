
Integrative Programming and Technologies
IT 323



 
FINAL PROJECT

Hangman Client Using Python







Members:
02 Ayon-ayon, Christian Jaymar 
03 Carabit, Jeco 
04 Del Rosario, Miguel Paolo
05 Dolor, Rey Christian
09 Hilarion, Bill Lenard
15 Patricio, Jan Ronald
16 Pis-o, Henrhod
19 Rivero, Theo
25 Andres, Geovelle Jhoyce
27 Cariño, Jonelle
30 De Vera, Melody Riza
33 Laxamana, Jacquelyn
36 Oficiar, Caryl Marie
39 Rocafort, Jam Spica






Schedule:
9345A 1:00 - 2:00 WS







May 2018

I. PROCEDURE
II How to Execute the program


Description
Command
Compile the interface for the server.
idlj -fall ..\<folder>\<filename>.idl

Starts the orb daemon and open a specific port for connection
start orbd -ORBInitialPort <port#>

Compile the implementation class
javac <Implementation>.java

Compile the server class
javac <Server>.java

Start the server at the port that was created earlier
java <server> -ORBInitialPort <port#>

Generate the IDL for the python client
omniidl -bpython Hangman.idl

Compile the client class
NOTE: Make sure that you are on the directory where the source code is located.

Python compiles at runtime. 
Runs the client at the given port
NOTE: Run this command on the command line. Make sure that the orb and the server is running. Also make sure that the path of your command line is where the client program is located. 
python <client>.py -ORBbootstrapAgentPort <port#> -ORBbootstrapAgentHostname <host>

III. Problems Encountered

1. We made use of Java Swing instead of using the required language (JavaFx) which at first, we had no idea that there was a required language to be used. Our solution to that problem is to redo our graphical user interface (GUI).

2. Our Graphical User Interface (GUI) wasn’t connecting properly in the corba server and it is only connecting after the panel was closed. Our solution to the problem is we made use of override run method. 

3. Our group decided to use C# for our second language and when we already finished the implementation, we found out that C# is not supported by CORBA. Our solution to our second problem is to change our language and switched to Python.

4. We had a hard time setting up the omniORB and omniORBpy. We had a difficulty in generating our idl for the python client. Our action to this problem is we read manuals and documentations.

5. The python client cannot connect to the server. The command within the .bat file was wrong wherein the supposed “-” in the ORBBOOTSTRAPHOST was missing.

6. Problems in connecting the client to the server because putting different values for the name_service variable where in they should be the same.

7. Other problems encountered where just minor problems like syntax error in translating the client in python.
